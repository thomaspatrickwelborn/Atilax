import{recursiveDefineProperties as t,recursiveGetOwnPropertyDescriptors as e}from"recourse";class s extends EventTarget{#t;#e=localStorage;#s;constructor(t,e){super(),this.#t=e,this.path=t}get path(){return this.#s}set path(t){void 0===this.#s&&(this.#s=t)}get(){let e=this.#e.getItem(this.path);return e&&(e=t(JSON.parse(e),{typeCoercion:!0})),e}set(t){return this.#e.setItem(this.path,JSON.stringify(e(t,{path:!0,retrocursion:!1,type:!0})))}remove(){try{return this.#e.removeItem(this.path)}catch(t){console.error(t)}}}class o extends EventTarget{#t={};#o={};constructor(t,e){super(),Object.assign(this.#t,e),this.addRoutes(t)}addRoutes(t,e){for(const[e,o]of Object.entries(t))this.#o[e]=new s(e,o)}removeRoutes(t){for(const e of t)delete this.#o[e]}getRoutes(t){if(!t)return this.#o;const e={};for(const s of[].concat(t))e[s]=this.#o[s];return e}}var r={Route:s,Router:o};export{r as default};
//# sourceMappingURL=atilax.min.js.map
