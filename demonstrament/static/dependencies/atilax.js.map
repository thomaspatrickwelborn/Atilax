{"version":3,"file":"atilax.js","sources":["../../../development/route/index.js","../../../development/router/index.js","../../../development/index.js"],"sourcesContent":["import {\n  recursiveDefineProperties, recursiveGetOwnPropertyDescriptors\n} from 'recourse'\nexport default class LocalStorageRoute extends EventTarget {\n  #options\n  #db = localStorage\n  #path\n  constructor($path, $options) {\n    super()\n    this.#options = $options\n    this.path = $path\n  }\n  get path() { return this.#path }\n  set path($path) {\n    if(this.#path !== undefined) return\n    this.#path = $path\n  }\n  get() {\n    let model = this.#db.getItem(this.path)\n    if(model) {\n      model = recursiveDefineProperties(JSON.parse(model), {\n        typeCoercion: true\n      })\n    }\n    return model\n  }\n  set($data) {\n    return this.#db.setItem(this.path, JSON.stringify(\n      recursiveGetOwnPropertyDescriptors($data, {\n        path: true,\n        retrocursion: false,\n        type: true,\n      })\n    ))\n  }\n  remove() {\n    try { return this.#db.removeItem(this.path) }\n    catch($err) { console.error($err) }\n  }\n}","import Route from '../route/index.js'\nexport default class LocalStorageRouter extends EventTarget {\n  #options = {}\n  #routes = {}\n  constructor($routes, $options) {\n    super()\n    Object.assign(this.#options, $options)\n    this.addRoutes($routes)\n  }\n  addRoutes($routes, $options) {\n    for(const [$routePath, $routeOptions] of Object.entries($routes)) {\n      this.#routes[$routePath] = new Route($routePath, $routeOptions)\n    }\n  }\n  removeRoutes($routes) {\n    for(const $routePath of $routes) {\n      delete this.#routes[$routePath]\n    }\n  }\n  getRoutes($paths) {\n    if(!$paths) { return this.#routes }\n    const routes = {}\n    for(const $path of [].concat($paths)) {\n      routes[$path] = this.#routes[$path]\n    }\n    return routes\n  }\n}","import Route from './route/index.js'\nimport Router from './router/index.js'\nexport default {\n  Route,\n  Router\n}"],"names":["Route","Router"],"mappings":";;AAGe,MAAM,iBAAiB,SAAS,WAAW,CAAC;AAC3D,EAAE;AACF,EAAE,GAAG,GAAG;AACR,EAAE;AACF,EAAE,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE;AAC/B,IAAI,KAAK;AACT,IAAI,IAAI,CAAC,QAAQ,GAAG;AACpB,IAAI,IAAI,CAAC,IAAI,GAAG;AAChB;AACA,EAAE,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,KAAK;AAChC,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;AAClB,IAAI,GAAG,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;AACjC,IAAI,IAAI,CAAC,KAAK,GAAG;AACjB;AACA,EAAE,GAAG,GAAG;AACR,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;AAC1C,IAAI,GAAG,KAAK,EAAE;AACd,MAAM,KAAK,GAAG,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC3D,QAAQ,YAAY,EAAE;AACtB,OAAO;AACP;AACA,IAAI,OAAO;AACX;AACA,EAAE,GAAG,CAAC,KAAK,EAAE;AACb,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS;AACrD,MAAM,kCAAkC,CAAC,KAAK,EAAE;AAChD,QAAQ,IAAI,EAAE,IAAI;AAClB,QAAQ,YAAY,EAAE,KAAK;AAC3B,QAAQ,IAAI,EAAE,IAAI;AAClB,OAAO;AACP,KAAK;AACL;AACA,EAAE,MAAM,GAAG;AACX,IAAI,IAAI,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/C,IAAI,MAAM,IAAI,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,IAAI,EAAC;AACrC;AACA;;ACtCe,MAAM,kBAAkB,SAAS,WAAW,CAAC;AAC5D,EAAE,QAAQ,GAAG;AACb,EAAE,OAAO,GAAG;AACZ,EAAE,WAAW,CAAC,OAAO,EAAE,QAAQ,EAAE;AACjC,IAAI,KAAK;AACT,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ;AACzC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO;AAC1B;AACA,EAAE,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE;AAC/B,IAAI,IAAI,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACtE,MAAM,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAIA,iBAAK,CAAC,UAAU,EAAE,aAAa;AACpE;AACA;AACA,EAAE,YAAY,CAAC,OAAO,EAAE;AACxB,IAAI,IAAI,MAAM,UAAU,IAAI,OAAO,EAAE;AACrC,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU;AACpC;AACA;AACA,EAAE,SAAS,CAAC,MAAM,EAAE;AACpB,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,CAAC,OAAO;AACrC,IAAI,MAAM,MAAM,GAAG;AACnB,IAAI,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AAC1C,MAAM,MAAM,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;AACxC;AACA,IAAI,OAAO;AACX;AACA;;ACzBA,YAAe;AACf,SAAEA,iBAAK;AACP,UAAEC;AACF;;;;"}