{"version":3,"file":"atilax.min.js","sources":["../development/route/index.js","../development/router/index.js","../development/index.js"],"sourcesContent":["import {\n  recursiveDefineProperties, recursiveGetOwnPropertyDescriptors\n} from 'recourse'\nexport default class LocalStorageRoute extends EventTarget {\n  #options\n  #db = localStorage\n  #path\n  constructor($path, $options) {\n    super()\n    this.#options = $options\n    this.path = $path\n  }\n  get path() { return this.#path }\n  set path($path) {\n    if(this.#path !== undefined) return\n    this.#path = $path\n  }\n  get() {\n    let model = this.#db.getItem(this.path)\n    if(model) {\n      model = recursiveDefineProperties(JSON.parse(model), {\n        typeCoercion: true\n      })\n    }\n    return model\n  }\n  set($data) {\n    return this.#db.setItem(this.path, JSON.stringify(\n      recursiveGetOwnPropertyDescriptors($data, {\n        path: true,\n        retrocursion: false,\n        type: true,\n      })\n    ))\n  }\n  remove() {\n    try { return this.#db.removeItem(this.path) }\n    catch($err) { console.error($err) }\n  }\n}","import Route from '../route/index.js'\nexport default class LocalStorageRouter extends EventTarget {\n  #options = {}\n  #routes = {}\n  constructor($routes, $options) {\n    super()\n    Object.assign(this.#options, $options)\n    this.addRoutes($routes)\n  }\n  addRoutes($routes, $options) {\n    for(const [$routePath, $routeOptions] of Object.entries($routes)) {\n      this.#routes[$routePath] = new Route($routePath, $routeOptions)\n    }\n  }\n  removeRoutes($routes) {\n    for(const $routePath of $routes) {\n      delete this.#routes[$routePath]\n    }\n  }\n  getRoutes($paths) {\n    if(!$paths) { return this.#routes }\n    const routes = {}\n    for(const $path of [].concat($paths)) {\n      routes[$path] = this.#routes[$path]\n    }\n    return routes\n  }\n}","import Route from './route/index.js'\nimport Router from './router/index.js'\nexport default {\n  Route,\n  Router\n}"],"names":["LocalStorageRoute","EventTarget","options","db","localStorage","path","constructor","$path","$options","super","this","undefined","get","model","getItem","recursiveDefineProperties","JSON","parse","typeCoercion","set","$data","setItem","stringify","recursiveGetOwnPropertyDescriptors","retrocursion","type","remove","removeItem","$err","console","error","LocalStorageRouter","routes","$routes","Object","assign","addRoutes","$routePath","$routeOptions","entries","Route","removeRoutes","getRoutes","$paths","concat","index","Router"],"mappings":"6FAGe,MAAMA,UAA0BC,YAC7CC,GACAC,GAAMC,aACNC,GACA,WAAAC,CAAYC,EAAOC,GACjBC,QACAC,MAAKR,EAAWM,EAChBE,KAAKL,KAAOE,CAChB,CACE,QAAIF,GAAS,OAAOK,MAAKL,CAAK,CAC9B,QAAIA,CAAKE,QACWI,IAAfD,MAAKL,IACRK,MAAKL,EAAQE,EACjB,CACE,GAAAK,GACE,IAAIC,EAAQH,MAAKP,EAAIW,QAAQJ,KAAKL,MAMlC,OALGQ,IACDA,EAAQE,EAA0BC,KAAKC,MAAMJ,GAAQ,CACnDK,cAAc,KAGXL,CACX,CACE,GAAAM,CAAIC,GACF,OAAOV,MAAKP,EAAIkB,QAAQX,KAAKL,KAAMW,KAAKM,UACtCC,EAAmCH,EAAO,CACxCf,MAAM,EACNmB,cAAc,EACdC,MAAM,KAGd,CACE,MAAAC,GACE,IAAM,OAAOhB,MAAKP,EAAIwB,WAAWjB,KAAKL,KAAK,CAC3C,MAAMuB,GAAQC,QAAQC,MAAMF,EAAK,CACrC,ECrCe,MAAMG,UAA2B9B,YAC9CC,GAAW,CAAA,EACX8B,GAAU,CAAA,EACV,WAAA1B,CAAY2B,EAASzB,GACnBC,QACAyB,OAAOC,OAAOzB,MAAKR,EAAUM,GAC7BE,KAAK0B,UAAUH,EACnB,CACE,SAAAG,CAAUH,EAASzB,GACjB,IAAI,MAAO6B,EAAYC,KAAkBJ,OAAOK,QAAQN,GACtDvB,MAAKsB,EAAQK,GAAc,IAAIG,EAAMH,EAAYC,EAEvD,CACE,YAAAG,CAAaR,GACX,IAAI,MAAMI,KAAcJ,SACfvB,MAAKsB,EAAQK,EAE1B,CACE,SAAAK,CAAUC,GACR,IAAIA,EAAU,OAAOjC,MAAKsB,EAC1B,MAAMA,EAAS,CAAA,EACf,IAAI,MAAMzB,IAAS,GAAGqC,OAAOD,GAC3BX,EAAOzB,GAASG,MAAKsB,EAAQzB,GAE/B,OAAOyB,CACX,ECxBA,IAAea,EAAA,CACfL,MAAEA,EACAM,OAAAA"}